{"version":3,"file":"static/js/386.7d88e156.chunk.js","mappings":"qRAEaA,EAAYC,EAAAA,GAAAA,IAAH,sJASTC,EAAQD,EAAAA,GAAAA,GAAH,gEAKLE,EAAYF,EAAAA,GAAAA,IAAH,4DAITG,EAAeH,EAAAA,GAAAA,EAAH,0C,yJCjBZI,GAAUJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,gMAWPM,EAAYN,EAAAA,GAAAA,MAAH,yGAOTO,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,yIASLS,EAAYT,EAAAA,GAAAA,OAAH,+MAYTU,EAAWV,EAAAA,GAAAA,IAAH,uCAIRW,EAAQX,EAAAA,GAAAA,IAAH,iF,UChCZY,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAElBG,EAAgB,CAClBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGRC,EAASC,EAAAA,KAAaC,MAAM,CAC9BL,KAAMI,EAAAA,KAAaE,WACnBL,MAAOG,EAAAA,KAAaH,QAAQK,WAC5BJ,SAAUE,EAAAA,OAqDd,EAlDqB,WACjB,IAAMG,GAAWC,EAAAA,EAAAA,MAMjB,OACI,0BACI,SAAC,KAAD,CACAT,cAAeA,EACfU,iBAAkBN,EAClBO,SAVa,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAC3BL,GAASM,EAAAA,EAAAA,IAASF,IAClBC,GACH,EAIO,UAKI,UAACzB,EAAD,YACI,SAACE,EAAD,CAAWyB,QAASnB,EAApB,mBACA,SAACL,EAAD,CACAyB,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,yIACNC,GAAIvB,EACJW,UAAQ,KAER,SAACb,EAAD,WAAU,SAAC,KAAD,CAAcO,KAAK,OAAOmB,OAAQ,SAAAC,GAAG,OAAI,SAAC1B,EAAD,gCAAJ,OAC/C,SAACL,EAAD,CAAWyB,QAASjB,EAApB,oBACA,SAACP,EAAD,CACAyB,KAAK,QACLf,KAAK,QACLgB,QAAQ,2CACRC,MAAM,sCACNC,GAAIrB,EACJS,UAAQ,KAER,SAACb,EAAD,WAAU,SAAC,KAAD,CAAcO,KAAK,QAAQmB,OAAQ,SAAAC,GAAG,OAAI,SAAC1B,EAAD,iCAAJ,OAChD,SAACL,EAAD,CAAWyB,QAAShB,EAApB,uBACA,SAACR,EAAD,CACAyB,KAAK,WACLf,KAAK,WACLkB,GAAIpB,EACJQ,UAAQ,KAER,SAACb,EAAD,WAAU,SAAC,KAAD,CAAcO,KAAK,WAAWmB,OAAQ,SAAAC,GAAG,OAAI,SAAC1B,EAAD,oCAAJ,OACnD,SAACF,EAAD,CAAWuB,KAAK,SAASf,KAAK,WAA9B,4BAKnB,E,oBC7DD,EAZiB,WACb,IAAMqB,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,OACI,4BACI,sCACA,SAAC,EAAD,IACW,wBAAVF,IAAoC,SAAC,KAAD,qEAGhD,C","sources":["components/Container.styled.js","components/ContactForm/ContactForm.styled.js","components/RegisterForm.js","page/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin: 0;\npadding: 20px;\nwidth: 320px;\nmin-height: 796px;\nbackground: #8FBC8F;\n`;\nexport const Title = styled.h2`\nmargin-botton: 10px;\nfont-size: 18px;\n`;\n\nexport const LoaderBox = styled.div`\nheight: 18px;\ntext-align: center;\n`;\nexport const ErrorMessage = styled.p`\n font-size: 16px;\n`;","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Wrapper = styled(Form)`\ndisplay: flex;\nflex-direction: column;\njustify-content: space-between;\nheight: 200px;\nmargin: 0;\npadding: 10px;\nborder: 2px solid #004D00;\nborder-radius: 15px;\n`;\n\nexport const NameLable = styled.label`\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 10px;\nfont-size: 16px;\n`;\n\nexport const Input = styled(Field)`\nmargin-bottom: 10px;\npadding: 4px;\nfont-size: 12px;\nbackground: #FFF8DC;\nborder: none;\nborder-radius: 3px;\n`;\n\nexport const SubitForm = styled.button`\nmargin-top: 10px;\nmargin-left: auto;\npadding: 4px;\nwidth: 110px;\nfont-weight: 500;\nborder: 1px solid #1E90FF;\nborder-radius: 15px;\nbackground-color: #1E90FF;\ncolor: #FFF8DC;\n`;\n\nexport const ErrorBox = styled.div`\nheight: 12px;\n`;\n\nexport const Error = styled.div`\nmargin-bottom: 10px;\nfont-size: 10px;\ncolor: #8B0000;\n`;","import { useDispatch } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\nimport * as yup from \"yup\";\nimport { ErrorMessage, Formik } from \"formik\";\nimport {register} from \"redux/auth/operations\";\nimport {\n    Wrapper,\n    NameLable,\n    Input,\n    ErrorBox,\n    Error,\n    SubitForm\n} from \"./ContactForm/ContactForm.styled\";\n\nconst NameInputId = nanoid();\nconst EmailInputId = nanoid();\nconst PasswordInputId = nanoid();\n\nconst initialValues = {\n    name: '',\n    email: '',\n    password: ''\n};\n\nconst schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().email().required(),\n    password: yup.mixed(),\n});\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const handleSubmit = (values, {resetForm}) => {\n        dispatch(register(values));\n        resetForm();\n    };\n\n    return (\n        <div>\n            <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n            >\n                <Wrapper>\n                    <NameLable htmlFor={NameInputId}>Name</NameLable>\n                    <Input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    id={NameInputId}\n                    required\n                    />\n                    <ErrorBox><ErrorMessage name=\"name\" render={msg => <Error>{`Please, enter Name`}</Error>} /></ErrorBox>\n                    <NameLable htmlFor={EmailInputId}>Email</NameLable>\n                    <Input\n                    type=\"email\"\n                    name=\"email\"\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                    title=\"Email must be a valid email address\"\n                    id={EmailInputId}\n                    required\n                    />\n                    <ErrorBox><ErrorMessage name=\"email\" render={msg => <Error>{`Please, enter Email`}</Error>}/></ErrorBox>\n                    <NameLable htmlFor={PasswordInputId}>Password</NameLable>\n                    <Input\n                    type=\"password\"\n                    name=\"password\"\n                    id={PasswordInputId}\n                    required\n                    />\n                    <ErrorBox><ErrorMessage name=\"password\" render={msg => <Error>{`Please, enter Password`}</Error>}/></ErrorBox>\n                    <SubitForm type=\"submit\" name=\"Register\">Register</SubitForm>\n                </Wrapper>\n            </Formik>\n        </div>\n    )\n}\n\nexport default RegisterForm;","import { useSelector } from \"react-redux\";\nimport RegisterForm from \"components/RegisterForm\";\nimport { selectError } from \"../redux/auth/selectors\";\nimport { ErrorMessage } from \"components/Container.styled\";\n\nconst Register = () => {\n    const error = useSelector(selectError);\n\n    return (\n        <div>\n            <h1>Register</h1>\n            <RegisterForm />\n            {error === \"User creation error\" && (<ErrorMessage>User creation error/such user is already registered.</ErrorMessage>)}\n        </div>\n    )\n}\n\nexport default Register;"],"names":["Container","styled","Title","LoaderBox","ErrorMessage","Wrapper","Form","NameLable","Input","Field","SubitForm","ErrorBox","Error","NameInputId","nanoid","EmailInputId","PasswordInputId","initialValues","name","email","password","schema","yup","shape","required","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","register","htmlFor","type","pattern","title","id","render","msg","error","useSelector","selectError"],"sourceRoot":""}