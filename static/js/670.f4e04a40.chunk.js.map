{"version":3,"file":"static/js/670.f4e04a40.chunk.js","mappings":"iSAYMA,EAAgB,CAClBC,MAAO,GACPC,SAAU,IAGRC,EAASC,EAAAA,KAAaC,MAAM,CAC9BJ,MAAOG,EAAAA,KAAaH,QAAQK,WAC5BJ,SAAUE,EAAAA,KAAaE,aA4E3B,EAzEkB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACI,SAAC,KAAD,CAAMC,UAAU,SACZC,MAAM,SACNC,EAAG,IAAKC,EAAG,IAAKC,EAAG,EACnBC,OAAQ,EACRC,YAAY,UACZC,YAAY,QACZC,aAAc,GANlB,UAQI,SAAC,KAAD,CACIjB,cAAeA,EACfkB,iBAAkBf,EAClBgB,SAjBS,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC5Bd,GAASe,EAAAA,EAAAA,IAAMF,IACfC,GACH,EAWO,SAKK,SAACE,GAAD,OACG,UAAC,KAAD,YACI,SAAC,KAAD,CACIC,KAAK,QACLC,KAAK,QAFT,SAIK,gBAAGC,EAAH,EAAGA,MAAH,EAAUC,KAAV,OACO,SAAC,KAAD,CAAaC,GAAI,EAAGjB,EAAE,QAAtB,UACI,SAAC,MAAD,kBAAWe,GAAX,IAAkBG,SAAS,KAAKD,GAAI,EACpCE,YAAY,QACZC,aAAc,CAAEC,QAAS,GAAKC,MAAO,WACrCC,iBAAiB,UACjBD,MAAM,UAAUE,QAAQ,cANnC,KAYL,SAAC,KAAD,CACIX,KAAK,WACLC,KAAK,WACLnB,UAAQ,EAHZ,SAKK,gBAAGoB,EAAH,EAAGA,MAAH,EAAUC,KAAV,OACG,SAAC,KAAD,CAAaC,GAAI,EAAGjB,EAAE,QAAtB,UACI,SAAC,MAAD,kBAAWe,GAAX,IAAkBG,SAAS,KAAKD,GAAI,EAChCE,YAAY,WACZC,aAAc,CAAEC,QAAS,GAAKC,MAAO,WACrCC,iBAAiB,UACjBD,MAAM,UAAUE,QAAQ,cANnC,KAWL,SAAC,KAAD,CAAQtB,EAAG,EACPF,EAAG,IAAKyB,SAAU,GAClBC,WAAW,OACXb,KAAK,SAASC,KAAK,SAHvB,sBAlCP,KA4ChB,E,UC3DD,EAtBc,WACV,IAAMa,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,OAAO,UAAC,KAAD,CAAM/B,UAAU,SAASC,MAAM,SAA/B,WACH,SAAC,KAAD,CAAS+B,GAAG,KAAKC,GAAI,GAAId,GAAI,GACzBQ,SAAU,GAAIC,WAAY,IAC1BM,UAAU,SAASC,UAAW,EAFlC,qBAIA,SAAC,EAAD,KACA,SAAC,KAAD,CAAKF,GAAI,GAAI9B,EAAG,GAAhB,SACe,gBAAV0B,IACD,SAAC,KAAD,CAAMF,SAAU,GAAhB,SACKE,QAIhB,C","sources":["components/LoginForm.js","page/Login.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport {logIn} from 'redux/auth/operations';\nimport {\n    FormControl,\n    Input,\n    Button,\n    Flex\n} from '@chakra-ui/react';\n\nconst initialValues = {\n    email: '',\n    password: ''\n};\n\nconst schema = yup.object().shape({\n    email: yup.string().email().required(),\n    password: yup.string().required(),\n});\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n    const handleSubmit = (values, { resetForm }) => {\n        dispatch(logIn(values));\n        resetForm();\n    };\n\n    return (\n        <Flex direction='column'\n            align='center'\n            w={280} h={200} p={3}\n            border={2}\n            borderColor='#FFFFF0'\n            borderStyle='solid'\n            borderRadius={10}\n        >\n            <Formik\n                initialValues={initialValues}\n                validationSchema={schema}\n                onSubmit={handleSubmit}\n            >\n                {(props) => (\n                    <Form>\n                        <Field\n                            type='email'\n                            name='email'\n                        >\n                            {({ field, form }) => (\n                                    <FormControl mb={1} w='250px'>\n                                        <Input {...field} htmlSize='md' mb={5}\n                                        placeholder='Email'\n                                        _placeholder={{ opacity: 0.4, color: 'inherit' }}\n                                        focusBorderColor='#FFFFF0'\n                                        color='#FFFFF0' variant='flushed'\n                                    />\n                                    </FormControl>\n                                )\n                            }\n                        </Field>\n                        <Field\n                            type='password'\n                            name='password'\n                            required\n                        >\n                            {({ field, form }) => (\n                                <FormControl mb={1} w='250px'>\n                                    <Input {...field} htmlSize='md' mb={5}\n                                        placeholder='Password'\n                                        _placeholder={{ opacity: 0.4, color: 'inherit' }}\n                                        focusBorderColor='#FFFFF0'\n                                        color='#FFFFF0' variant='flushed'\n                                    />\n                                </FormControl>\n                            )}\n                        </Field>\n                        <Button p={2}\n                            w={100} fontSize={14}\n                            fontWeight='bold'\n                            type='submit' name='Log in'>Log in\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </Flex>\n    );\n};\n\nLoginForm.propTypes = {\n    handleSubmit: PropTypes.func,\n    field: PropTypes.object,\n    form: PropTypes.object,\n};\n\nexport default LoginForm;","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport LoginForm from 'components/LoginForm';\nimport { selectError } from 'redux/auth/selectors';\nimport { Flex, Box, Heading, Text} from '@chakra-ui/react';\n\nconst Login = () => {\n    const error = useSelector(selectError);\n\n    return <Flex direction='column' align='center'>\n        <Heading as='h2' mt={20} mb={30}\n            fontSize={30} fontWeight={500}\n            textAlign='center' noOfLines={1}\n        >Log in</Heading>\n        <LoginForm />\n        <Box mt={10} h={30}>\n            {error === 'Login error' && (\n            <Text fontSize={16}>\n                {error}\n            </Text>)}\n        </Box>\n    </Flex>\n};\n\nLogin.propTypes = {\n    error: PropTypes.string,\n};\n\nexport default Login;"],"names":["initialValues","email","password","schema","yup","shape","required","dispatch","useDispatch","direction","align","w","h","p","border","borderColor","borderStyle","borderRadius","validationSchema","onSubmit","values","resetForm","logIn","props","type","name","field","form","mb","htmlSize","placeholder","_placeholder","opacity","color","focusBorderColor","variant","fontSize","fontWeight","error","useSelector","selectError","as","mt","textAlign","noOfLines"],"sourceRoot":""}