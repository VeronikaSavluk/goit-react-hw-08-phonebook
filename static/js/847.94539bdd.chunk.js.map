{"version":3,"file":"static/js/847.94539bdd.chunk.js","mappings":"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","sources":["pages/Contacts.js","../node_modules/@chakra-ui/image/dist/index.esm.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {fetchContacts} from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport {\n    ContactForm,\n    FilterContactList,\n    ContactList,\n    Loader\n} from 'components';\nimport Phonebook from '../images/phonebook.png'\nimport { Flex, Box, Center, Heading, Grid, Img } from '@chakra-ui/react';\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return <Flex direction='column' justifyContent='space-evenly'>\n        <Flex align='flex-end' justifyContent='center'\n            mt={{ base: '30px', md: '80px' }}\n            mb={{ base: '10px', md: '30px' }}\n        >\n            <Img src={Phonebook} alt='' w='55px' h='55px' />\n            <Heading as='h2' ml='10px'\n                fontSize={{ base: '2xl', md: '4xl' }}\n                fontWeight='medium'\n                textAlign='center' noOfLines={1}>\n                Phonebook\n            </Heading>\n        </Flex>\n        <Flex direction={{ base: 'column', md: 'row' }}\n            justifyContent='space-evenly' alignItems='flex-end'>\n            <ContactForm />\n            <Flex direction='column' w={{ base: '280px', md: '355px' }}\n                align='stretch' border='2px solid' borderRadius='10px'\n                borderColor='#FFFFF0' p='10px'\n            >\n                <Grid templateColumns={{ base: '1fr 1fr', md: '1rf 2fr' }}\n                    justifyItems='end' alignItems='center'\n                >\n                    <Heading as='h3'\n                        fontSize={{ base: 'lg', md: '2xl' }}\n                        fontWeight='medium'\n                        textAlign='center'\n                        noOfLines={1}\n                        justifySelf='start'>\n                        Contacts\n                    </Heading>\n                    <FilterContactList />\n                </Grid>\n                <Center my={1} h='21px'>\n                    {isLoading && !error && <Loader />}\n                    {error && <Box>{error}</Box>}\n                </Center>\n                <ContactList />\n            </Flex>\n        </Flex>\n    </Flex>\n};\n\nContacts.propTypes = {\n    isLoggedIn: PropTypes.bool,\n    error: PropTypes.string,\n};\n\nexport default Contacts;","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport {\n  Image2 as Image,\n  Img,\n  shouldShowFallbackImage,\n  useImage\n};\n"],"names":["dispatch","useDispatch","isLoading","useSelector","selectIsLoading","error","selectError","useEffect","fetchContacts","direction","justifyContent","align","mt","base","md","mb","src","Phonebook","alt","w","h","as","ml","fontSize","fontWeight","textAlign","noOfLines","alignItems","border","borderRadius","borderColor","p","templateColumns","justifyItems","justifySelf","my","NativeImage","forwardRef","props","ref","htmlWidth","htmlHeight","rest","React","width","height","displayName","Image2","forwardRef2","fallbackSrc","fallback","srcSet","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","useState","setStatus","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","object","keysToOmit","clone","Object","assign","key","omit","chakra","className","Img","forwardRef3","chakra2"],"sourceRoot":""}